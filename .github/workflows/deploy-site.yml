name: 🚀 Deploy to Contabo VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: 🔁 Build & Deploy on Contabo VPS
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v3

      - name: 🔐 Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_DEPLOY_KEY }}

      - name: 🧠 Add VPS Host to Known Hosts
        run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy & Restart on VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PROJECT_PATH: ${{ secrets.VPS_PROJECT_PATH }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
        run: |
          ssh $VPS_USER@$VPS_HOST "bash -s" -- "$VPS_PROJECT_PATH" << 'SCRIPT'
            set -e
            project_path=$1
            echo "📂 Changing to project directory: \$project_path"
            cd "\$project_path"
            echo "🔄 Fetching latest changes from GitHub..."
            git fetch origin main
            git reset --hard origin/main
            git clean -fd
            echo "🔧 Creating .env.local file..."
            cat > .env.local << 'EOF'
            NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
            SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
            NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
            NODE_ENV=production
            EOF

            echo "📦 Installing dependencies..."
            if [ ! -d "node_modules" ] || git diff --name-only HEAD~1 HEAD | grep -q "package.json\|package-lock.json"; then
              rm -rf node_modules package-lock.json
              npm install
            else
              echo "Dependencies are up to date"
            fi

            echo "🏗️ Building the project..."
            npm run build

            echo "🔁 Restarting app via PM2..."
            pm2 restart tinchat || pm2 start npm --name "tinchat" -- start

            echo "✅ Deployment completed!"
          SCRIPT