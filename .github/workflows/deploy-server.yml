- name: 🚀 Deploy & Update Server
  env:
    SERVER_USER: ${{ secrets.SERVER_USER }}
    SERVER_HOST: ${{ secrets.SERVER_HOST }}
    SERVER_PROJECT_PATH: ${{ secrets.SERVER_PROJECT_PATH }}
  run: |
    ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 "$SERVER_USER@$SERVER_HOST" bash -s <<'SCRIPT'
      set -euo pipefail
      
      # Clean project path input
      PROJECT_PATH=$(echo "${{ secrets.SERVER_PROJECT_PATH }}" | tr -d '\n' | sed 's/ *$//')
      
      echo "📂 Changing to server directory: $PROJECT_PATH"
      cd "$PROJECT_PATH" || {
        echo "❌ Failed to change to project directory"
        exit 1
      }
      
      # Git operations
      echo "🔄 Force updating repository..."
      git fetch origin main
      git reset --hard origin/main
      git clean -fd
      echo "✅ Repository updated to commit: $(git rev-parse --short HEAD)"
      
      # Dependency management
      echo "📦 Checking dependencies..."
      if [ ! -d "node_modules" ] || git diff --name-only HEAD~1 HEAD | grep -q "package-lock.json\|package.json"; then
        echo "🔄 Reinstalling dependencies..."
        rm -rf node_modules package-lock.json
        npm ci --only=production
      fi
      
      # Create .env file with GitHub secrets
      echo "🔧 Creating environment file..."
      cat > .env <<EOF
      SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_URL=${{ secrets.SUPABASE_URL }}
      UPSTASH_REDIS_REST_URL=${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN=${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      NODE_ENV=production
      PORT=3001
      EOF
      
      # Build process
      echo "🏗️ Building project..."
      rm -rf dist
      npx tsc --build || {
        echo "❌ Build failed"
        npx tsc --build --verbose
        exit 1
      }
      
      # PM2 process management
      echo "🔁 Managing PM2 processes..."
      pm2 delete tinchat-server || true
      pm2 start dist/index.js --name "tinchat-server" --update-env
      pm2 save
      
      echo "✅ Deployment completed successfully!"
    SCRIPT