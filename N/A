**How Resizing Works:**

1.  The user clicks and holds (or touches and holds) the resize handle in the bottom-right corner of a window.
2.  `onResizeHandleMouseDown` or `onResizeHandleTouchStart` sets `isResizing` to `true` and records the initial mouse/touch position and current window dimensions.
3.  As the user moves the mouse/finger, `onResizeMouseMove` or `onResizeTouchMove` calculates the change in X and Y.
4.  These changes are added to the initial width and height.
5.  The new width and height are applied to the `dimensions` state, causing the window to re-render with the new size.
6.  The dimensions are constrained by minimum sizes and parent boundaries.
7.  When the user releases the mouse button/finger, `isResizing` is set to `false`, and the event listeners are removed.

This provides a basic corner-based resizing functionality. More advanced resizing (e.g., from all corners/edges, aspect ratio locking) would require more complex logic. The red "dragging" outline is not applied during resizing to differentiate the operations.
